{"version":3,"file":"static/js/742.ade6ff58.chunk.js","mappings":"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","sources":["components/Form/ContactForm.jsx","components/App/App.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { CurrentForm, Input, Button, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { BsFillTelephonePlusFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { selectContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix';\nimport { ErrorMessage } from '@hookform/error-message';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm();\n  const stateContacts = useSelector(selectContacts);\n\n  const onSubmitForm = contactInfo => {\n    const duplicateName = stateContacts.find(\n      contact => contact.name === contactInfo.name\n    );\n    duplicateName\n      ? alert(contactInfo.name + ' is already in your contacts')\n      : dispatch(addContact(contactInfo));\n    reset({\n      name: '',\n      number: '',\n    });\n  };\n\n  return (\n    <CurrentForm onSubmit={handleSubmit(onSubmitForm)}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          {...register('name', {\n            pattern: {\n              value:\n                /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n              message:\n                \"Name may contain only letters. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            },\n          })}\n          id=\"name\"\n          placeholder=\"For example Jacob Mercer\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <ErrorMessage\n          errors={errors}\n          name=\"name\"\n          render={({ message }) => Notify.failure(`${message}`)}\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          {...register('number', {\n            pattern: {\n              value:\n                /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n              message:\n                'Phone number must be only digits and can contain spaces, dashes, parentheses and can start with +',\n            },\n          })}\n          id=\"number\"\n          placeholder=\"Starts with '+'\"\n          required\n        />\n        <ErrorMessage\n          errors={errors}\n          name=\"number\"\n          render={({ message }) => Notify.warning(`${message}`)}\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add to contact <BsFillTelephonePlusFill size=\"10px\" />\n      </Button>\n    </CurrentForm>\n  );\n};\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\npadding: 30px;\nwidth: 420px;\n`;\nexport default Container;","import styled from \"styled-components\";\n\nexport const SectionTitle = styled.h2`\nmargin-bottom: 12px;\nfont-size: 28px;\ncolor:#ffffff;\ntext-shadow: 2px 3px 3px #000000;\n`;","import { SectionTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ol`\n  margin: 0;\n  padding-left: 16px;\n`;\n\nexport const ContactName = styled.li`\ncolor: #fff;\nfont-weight: 600;\nfont-size: 18px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  width: 32px;\n  background-color: #1a1f25;\n  cursor: pointer;\n  border: transparent;\n`;\n\nexport const Text = styled.strong`\ncolor: #cd3a3a;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactList, Button, Text, ContactName } from './Contacts.styled';\nimport { selectContacts, selectFilterValue } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/contactOperations';\nimport { RiDeleteBack2Fill } from 'react-icons/ri';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const stateContacts = useSelector(selectContacts);\n  const stateFilterValue = useSelector(selectFilterValue);\n  const filteredContacts = stateContacts.filter(contact =>\n    contact.name.toLowerCase().includes(stateFilterValue.toLowerCase())\n  );\n\n  return (\n    <div>\n      {stateContacts.length > 0 ? (\n        <ContactList>\n          {filteredContacts.map(contact => (\n            <ContactName key={contact.id}>\n              {contact.name} : {contact.number}\n              <Button\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(contact))}\n              >\n                <RiDeleteBack2Fill color=\"green\" size=\"16px\" />\n              </Button>\n            </ContactName>\n          ))}\n        </ContactList>\n      ) : (\n        <Text>There are no contacts in your phonebook yet.</Text>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import ContactForm from '../../components/Form/ContactForm';\nimport Container from '../../components/App/App.styled';\nimport Section from 'components/Section/Section';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst ContactsPage = () => {\n  const stateIsLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      {stateIsLoading ? (\n        <ThreeDots\n          height=\"70\"\n          width=\"70\"\n          radius=\"9\"\n          color=\"#4fa94d\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        <Section title=\"Contacts\">\n          <Filter />\n          <Contacts />\n        </Section>\n      )}\n    </Container>\n  );\n};\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","_useForm","useForm","register","errors","formState","handleSubmit","reset","stateContacts","useSelector","selectContacts","_jsxs","CurrentForm","onSubmit","contactInfo","find","contact","name","alert","addContact","number","children","Label","_jsx","Input","_objectSpread","type","pattern","value","message","id","placeholder","title","required","ErrorMessage","render","_ref","Notify","concat","_ref2","Button","BsFillTelephonePlusFill","size","styled","_templateObject","_taggedTemplateLiteral","SectionTitle","ContactList","ContactName","_templateObject2","_templateObject3","Text","_templateObject4","stateFilterValue","selectFilterValue","filteredContacts","filter","toLowerCase","includes","length","map","onClick","deleteContact","RiDeleteBack2Fill","color","stateIsLoading","selectIsLoading","useEffect","fetchContacts","Container","Section","ContactForm","ThreeDots","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","Filter","Contacts"],"sourceRoot":""}