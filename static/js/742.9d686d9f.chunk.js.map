{"version":3,"file":"static/js/742.9d686d9f.chunk.js","mappings":"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","sources":["components/Form/ContactForm.jsx","components/App/App.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { CurrentForm, Input, Button, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactOperations';\nimport { BsFillTelephonePlusFill } from 'react-icons/bs';\nimport { useForm } from 'react-hook-form';\nimport { selectContacts } from 'redux/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, reset } = useForm();\n  const stateContacts = useSelector(selectContacts);\n\n  const onSubmitForm = contactInfo => {\n    const duplicateName = stateContacts.find(\n      contact => contact.name === contactInfo.name\n    );\n    duplicateName\n      ? alert(contactInfo.name + ' is already in your contacts')\n      : dispatch(addContact(contactInfo));\n\n    console.log(stateContacts);\n    reset({\n      name: '',\n      phone: '',\n    });\n  };\n\n  return (\n    <CurrentForm onSubmit={handleSubmit(onSubmitForm)}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          {...register('name')}\n          id=\"name\"\n          placeholder=\"For example Jacob Mercer\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number:\n        <Input\n          type=\"tel\"\n          {...register('phone')}\n          id=\"phone\"\n          placeholder=\"Starts with '+'\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">\n        Add to contact <BsFillTelephonePlusFill size=\"10px\" />\n      </Button>\n    </CurrentForm>\n  );\n};\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\npadding: 30px;\nwidth: 420px;\n`;\nexport default Container;","import styled from \"styled-components\";\n\nexport const SectionTitle = styled.h2`\nmargin-bottom: 12px;\nfont-size: 28px;\n`;","import { SectionTitle } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ol`\n  margin: 0;\n  padding-left: 16px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 10px;\n  background-color: #fff;\n  cursor: pointer;\n  border: transparent;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactList, Button } from './Contacts.styled';\nimport { selectContacts, selectFilterValue } from 'redux/selectors';\nimport { deleteContact } from 'redux/contactOperations';\nimport { RiDeleteBack2Fill } from 'react-icons/ri';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const stateContacts = useSelector(selectContacts);\n  const stateFilterValue = useSelector(selectFilterValue);\n  const filteredContacts = stateContacts?.filter(contact =>\n    contact.name.toLowerCase().includes(stateFilterValue.toLowerCase())\n  );\n\n  return (\n    <div>\n      {stateContacts.length > 0 ? (\n        <ContactList>\n          {filteredContacts.map(contact => {\n            return (\n              <li key={contact.id}>\n                {contact.name} : {contact.phone}\n                <Button\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact))}\n                >\n                  <RiDeleteBack2Fill color=\"darkblue\" />\n                </Button>\n              </li>\n            );\n          })}\n        </ContactList>\n      ) : (\n        <strong>There are no contacts in your phonebook yet.</strong>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n","import ContactForm from '../../components/Form/ContactForm';\nimport Container from '../../components/App/App.styled';\nimport Section from 'components/Section/Section';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactOperations';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst ContactsPage = () => {\n  const stateIsLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      {stateIsLoading ? (\n        <ThreeDots\n          height=\"70\"\n          width=\"70\"\n          radius=\"9\"\n          color=\"#4fa94d\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        <Section title=\"Contacts\">\n          <Filter />\n          <Contacts />\n        </Section>\n      )}\n    </Container>\n  );\n};\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","_useForm","useForm","register","handleSubmit","reset","stateContacts","useSelector","selectContacts","_jsxs","CurrentForm","onSubmit","contactInfo","find","contact","name","alert","addContact","console","log","phone","children","Label","_jsx","Input","_objectSpread","type","id","placeholder","pattern","title","required","Button","BsFillTelephonePlusFill","size","styled","_templateObject","_taggedTemplateLiteral","SectionTitle","_ref","ContactList","_templateObject2","stateFilterValue","selectFilterValue","filteredContacts","filter","toLowerCase","includes","length","map","onClick","deleteContact","RiDeleteBack2Fill","color","stateIsLoading","selectIsLoading","useEffect","fetchContacts","Container","Section","ContactForm","ThreeDots","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","Filter","Contacts"],"sourceRoot":""}